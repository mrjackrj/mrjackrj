Filial:
  actAs:
    Timestampable: ~
  columns:
    endereco:       { type: string(200) }
    bairro:         { type: string(80) }
    numero:         { type: string(20) }
    complemento:    { type: string(100) }
    telefone1:      { type: string(25) }
    telefone2:      { type: string(25) }

Cliente:
  actAs:
    Timestampable: ~
  columns:
    nome:            { type: string(250), notnull: true }
    email:           { type: string(100), notnull: true }
    cpf:             { type: string(25), notnull: true }
    telefone:        { type: string(25) }
    endereco:        { type: string(250) }
    cidade:        { type: string(100) }
    estado:        { type: string(50) }
    observacoes:        { type: string }
    user_id:         { type: integer }
  relations:
    User:
      class: sfGuardUser
      local: user_id
      foreign: id
      type: one
      onDelete: CASCADE

Contato:
  actAs:
    Timestampable: ~
  columns:
    nome:            { type: string(250), notnull: true }
    email:           { type: string(100), notnull: true }
    telefone:        { type: string(25) }
    assunto:        { type: string(250) }
    mensagem:        { type: string }

Marca:
  actAs:
    Timestampable: ~
    Sluggable:
      unique: true
      fields: [descricao]
      canUpdate: true
  columns:
    descricao:       { type: string(100), notnull: true }
    imagem:          { type: string(250) }

Peca:
  actAs:
    Timestampable: ~
  columns:
    nome:            { type: string(250), notnull: true }
  relations:
    Modelos:        { onDelete: CASCADE, class: Modelo, local: peca_id, foreign: modelo_id, refClass: ModeloPeca }

Modelo:
  actAs:
    Timestampable: ~
  columns:
    nome:            { type: string(100), notnull: true }
    imagem:          { type: string(250) }
    marca_id:        { type: integer }
    mostrar_site:    { type: boolean, default: 1 }
  relations:
    Marca:           { local: marca_id, foreign: id }
    Pecas:           { onDelete: CASCADE, class: Peca, local: modelo_id, foreign: peca_id, refClass: ModeloPeca }

ModeloPeca:
  actAs:
    Timestampable: ~
  columns:
    modelo_id:       { type: integer, notnull: true }
    peca_id:         { type: integer, notnull: true }
    preco_dinheiro:  { type: string(20) }
    preco_cartao:    { type: string(20) }
  relations:
    Modelo:        { class: Modelo, local: modelo_id }
    Peca:        { class: Peca, local: peca_id }

OrdemServico:
  actAs:
    Timestampable: ~
  columns:
    modelo_id:       { type: integer, notnull: true }
    cliente_id:        { type: integer, notnull: true }
    usuario_cadastro_id: { type: integer }
    defeito:      { type: string(250) }
    comentario:      { type: string }
    pagamento:       { type: enum, values: [Dinheiro, Parcelado] }
    testado:         { type: boolean }
    imei:            { type: string(50) }
    com_senha:       { type: boolean }
    senha:           { type: string(25) }
    garantia:        { type: string(50) }
    valor:           { type: string(20) }
    mensagem_impressao: { type: string }
    status:          { type: enum, values: [Aguardando, Finalizado, Cancelada, Entregue]}
    data_retirada:   { type: timestamp }
  relations:
    Modelo:        { class: Modelo, local: modelo_id }
    Pecas:           { onDelete: CASCADE, class: Peca, local: ordem_servico_id, foreign: peca_id, refClass: OrdemServicoPeca }
    Cliente:         { class: Cliente, local: cliente_id }
    UsuarioCadastro: { class: sfGuardUser, local: usuario_cadastro_id }

OrdemServicoPeca:
  actAs:
    Timestampable: ~
  columns:
    ordem_servico_id:    { type: integer, notnull: true }
    peca_id:             { type: integer, notnull: true }
  relations:
    OrdemServico:        { class: OrdemServico, local: ordem_servico_id }
    Peca:                { class: Peca, local: peca_id }

sfGuardUser:
  actAs: [Timestampable]
  columns:
    first_name: string(255)
    last_name: string(255)
    email_address:
      type: string(255)
      notnull: true
      unique: true
    username:
      type: string(128)
    algorithm:
      type: string(128)
      default: sha1
      notnull: true
    salt: string(128)
    password: string(128)
    is_active:
      type: boolean
      default: 1
    is_super_admin:
      type: boolean
      default: false
    last_login:
      type: timestamp
    filial_id:
      type: integer
  indexes:
    is_active_idx:
      fields: [is_active]
  relations:
    Groups:
      class: sfGuardGroup
      local: user_id
      foreign: group_id
      refClass: sfGuardUserGroup
      foreignAlias: Users
    Permissions:
      class: sfGuardPermission
      local: user_id
      foreign: permission_id
      refClass: sfGuardUserPermission
      foreignAlias: Users
    Filial:
      class: Filial
      local: filial_id
